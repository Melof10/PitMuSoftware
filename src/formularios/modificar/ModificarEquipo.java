/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios.modificar;

import clases.Equipo;
import clases.Jugador;
import formularios.AgregarJugadorModificarEquipo;
import formularios.consulta.GestionarEquipo;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import metodos.Cargar;
import metodos.CentralizarColumnasJTable;
import metodos.Guardar;
import metodos.Leer;
import metodos.Modificar;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Federico Melo
 */
public class ModificarEquipo extends javax.swing.JDialog {

    private TableCellRenderer columnasCentralizadas = new CentralizarColumnasJTable();
    public static DefaultTableModel DefaultTableModel = new DefaultTableModel();
    private int idUsuario;
    private int idEquipo;

    public ModificarEquipo(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public ModificarEquipo(javax.swing.JDialog parent, boolean modal, int idUsuario, int idEquipo) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        this.idUsuario = idUsuario;
        this.idEquipo = idEquipo;
        // Título de la Ventana
        setTitle("PitMu SOFTWARE - Modificar Equipo");
        // Icono para el Sistema
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/logo.png")).getImage());
        tablaJugadorEquipo.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 16));
        tablaJugadorEquipo.getTableHeader().setOpaque(false);
        tablaJugadorEquipo.getTableHeader().setBackground(new Color(255, 153, 0));
        tablaJugadorEquipo.getTableHeader().setForeground(new Color(255, 255, 255));
    }

    private void propiedadesTabla() {

        tablaJugadorEquipo.getColumnModel().getColumn(1).setCellRenderer(columnasCentralizadas);
        tablaJugadorEquipo.getColumnModel().getColumn(2).setCellRenderer(columnasCentralizadas);
        tablaJugadorEquipo.getColumnModel().getColumn(3).setCellRenderer(columnasCentralizadas);
        tablaJugadorEquipo.getColumnModel().getColumn(4).setCellRenderer(columnasCentralizadas);
        tablaJugadorEquipo.getColumnModel().getColumn(5).setCellRenderer(columnasCentralizadas);
        tablaJugadorEquipo.getColumnModel().getColumn(6).setCellRenderer(columnasCentralizadas);
        tablaJugadorEquipo.getColumnModel().getColumn(7).setCellRenderer(columnasCentralizadas);

        TableColumn columnaCero = tablaJugadorEquipo.getColumnModel().getColumn(0);
        columnaCero.setMaxWidth(0);
        columnaCero.setMinWidth(0);
        columnaCero.setPreferredWidth(0);

    }

    public void cargarTabla() {

        Leer miLeer = new Leer();
        Cargar miCargar = new Cargar();

        String titulos[] = new String[8];
        titulos[0] = "ID";
        titulos[1] = "Nombre";
        titulos[2] = "Apellido";
        titulos[3] = "DNI";
        titulos[4] = "Domicilio";
        titulos[5] = "Teléfono";
        titulos[6] = "Estatura";
        titulos[7] = "Posición";

        DefaultTableModel.setColumnIdentifiers(titulos);
        tablaJugadorEquipo.setModel(DefaultTableModel);

        Jugador miJugador[] = miLeer.leerEquiposRelacionJugador(idUsuario, idEquipo);

        tablaJugadorEquipo = miCargar.cargarJugador(tablaJugadorEquipo, miJugador, titulos);

    }

    private void cargarTablaGestionarEquipo(int idUsuario) {

        String titulos[] = new String[4];
        titulos[0] = "ID";
        titulos[1] = "Nombre de Equipo";
        titulos[2] = "Estadio";
        titulos[3] = "Dirección de Estadio";

        Leer miLeer = new Leer();
        Cargar miCargar = new Cargar();

        GestionarEquipo.tablaEquipo = miCargar.cargarEquipos(GestionarEquipo.tablaEquipo, miLeer.leerEquipos(idUsuario), titulos);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        itemEliminar = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        txt_nombre = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        txt_direccion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_estadio = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaJugadorEquipo = new javax.swing.JTable();

        jPopupMenu1.setBackground(new java.awt.Color(255, 255, 255));
        jPopupMenu1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));

        itemEliminar.setBackground(new java.awt.Color(255, 255, 255));
        itemEliminar.setText("Eliminar");
        itemEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemEliminarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(itemEliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/add (1).png"))); // NOI18N
        jButton1.setText(" Agregar Jugador");
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Modificar Equipo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 18))); // NOI18N

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setText("Nombre:");

        txt_nombre.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_nombre.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_nombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));
        txt_nombre.setPreferredSize(new java.awt.Dimension(2, 28));

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel14.setText("Dirección de Estadio:");

        jButton4.setBackground(new java.awt.Color(255, 153, 0));
        jButton4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/save(2).png"))); // NOI18N
        jButton4.setText("  Guardar");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4jButton2ActionPerformed(evt);
            }
        });

        txt_direccion.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_direccion.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_direccion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));
        txt_direccion.setMinimumSize(new java.awt.Dimension(2, 28));

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Nombre de Estadio:");

        txt_estadio.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txt_estadio.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_estadio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0)));
        txt_estadio.setMinimumSize(new java.awt.Dimension(2, 28));
        txt_estadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_estadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 142, Short.MAX_VALUE))
                    .addComponent(txt_nombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_estadio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_direccion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_estadio, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_direccion, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                .addGap(59, 59, 59)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("importar lista de jugadores en Excel");

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Importar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed1(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Ó");

        tablaJugadorEquipo = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tablaJugadorEquipo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaJugadorEquipo.setComponentPopupMenu(jPopupMenu1);
        tablaJugadorEquipo.setGridColor(new java.awt.Color(255, 255, 255));
        tablaJugadorEquipo.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tablaJugadorEquipo.setRowHeight(25);
        tablaJugadorEquipo.setSelectionBackground(new java.awt.Color(0, 112, 192));
        tablaJugadorEquipo.setShowVerticalLines(false);
        tablaJugadorEquipo.getTableHeader().setReorderingAllowed(false);
        tablaJugadorEquipo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaJugadorEquipoMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(tablaJugadorEquipo);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2)
                        .addGap(25, 25, 25)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 900, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jButton2)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        AgregarJugadorModificarEquipo agJugador = new AgregarJugadorModificarEquipo(this, true, idUsuario, idEquipo);
        agJugador.setVisible(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4jButton2ActionPerformed

        Guardar miGuardar = new Guardar();
        Modificar miModificar = new Modificar();
        Leer miLeer = new Leer();
        int filas = tablaJugadorEquipo.getRowCount();

        Jugador miJugadorValidacionDos[] = miLeer.leerJugador(idUsuario);
        int auxiliarJugador = 0;
        // GUARDAR JUGADOR QUE NO ESTE EN LA BASE DE DATOS
        for (int i = 0; i < tablaJugadorEquipo.getRowCount(); i++) {
            if (Integer.parseInt(tablaJugadorEquipo.getValueAt(i, 0).toString()) == 0) {
                Jugador miJugadorTablaValidacion = new Jugador();
                miJugadorTablaValidacion.setNombreJugador(tablaJugadorEquipo.getValueAt(i, 1).toString());
                miJugadorTablaValidacion.setApellidoJugador(tablaJugadorEquipo.getValueAt(i, 2).toString());
                miJugadorTablaValidacion.setDniJugador(Integer.parseInt(tablaJugadorEquipo.getValueAt(i, 3).toString()));
                miJugadorTablaValidacion.setDomicilioJugador(tablaJugadorEquipo.getValueAt(i, 4).toString());
                miJugadorTablaValidacion.setTelefonoJugador(Integer.parseInt(tablaJugadorEquipo.getValueAt(i, 5).toString()));
                miJugadorTablaValidacion.setEstaturaJugador(Double.parseDouble(tablaJugadorEquipo.getValueAt(i, 6).toString()));
                miJugadorTablaValidacion.setPosicionJugador(tablaJugadorEquipo.getValueAt(i, 7).toString());
                for (int x = 0; x < miJugadorValidacionDos.length; x++) {
                    if (miJugadorValidacionDos[x].getDniJugador() == miJugadorTablaValidacion.getDniJugador()) {
                        auxiliarJugador = 1;
                    }
                }
                if (auxiliarJugador == 0) {
                    miJugadorTablaValidacion.setIdUsuario(idUsuario);
                    miJugadorTablaValidacion.setEstadoJugador("alta");
                    miGuardar.guardarJugador(miJugadorTablaValidacion);
                }
            }
        }

        if (!txt_nombre.getText().trim().isEmpty()
                && !txt_estadio.getText().trim().isEmpty()
                && !txt_direccion.getText().trim().isEmpty()) {

            Equipo miEquipo = new Equipo();
            miEquipo.setNombreEquipo(txt_nombre.getText().trim());
            miEquipo.setNombreEstadioEquipo(txt_estadio.getText().trim());
            miEquipo.setDireccionEstadioEquipo(txt_direccion.getText().trim());
            miEquipo.setIdEquipo(idEquipo);
            miEquipo.setIdUsuario(idUsuario);
            miModificar.modificarEquipo(miEquipo);
            new alertas.AlertSuccess(this, true, "El equipo se modificó correctamente").setVisible(true);            
            cargarTablaGestionarEquipo(idUsuario);
            dispose();

        } else {
            new alertas.AlertWarning(this, true, "Debe rellenar todos los campos").setVisible(true);            
        }

    }//GEN-LAST:event_jButton4jButton2ActionPerformed

    private void txt_estadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_estadioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_estadioActionPerformed

    private void jButton2ActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed1

        JFileChooser miJFileChoser = new JFileChooser();
        miJFileChoser.setDialogTitle("Buscar plantilla con Jugadores");
        File archivo = null;
        if (miJFileChoser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            archivo = new File(miJFileChoser.getSelectedFile().toString());
        }
        try {
            FileInputStream file = new FileInputStream(archivo);
            XSSFWorkbook wb = new XSSFWorkbook(file);
            XSSFSheet sheet = wb.getSheetAt(0);

            int numFilas = sheet.getLastRowNum();

            Jugador miJugadorArreglo[] = new Jugador[numFilas];

            for (int i = 1; i <= numFilas; i++) {
                Row fila = sheet.getRow(i);

                miJugadorArreglo[i - 1] = new Jugador();
                miJugadorArreglo[i - 1].setNombreJugador(fila.getCell(0).getStringCellValue());
                miJugadorArreglo[i - 1].setApellidoJugador(fila.getCell(1).getStringCellValue());
                miJugadorArreglo[i - 1].setDniJugador((long) fila.getCell(2).getNumericCellValue());
                miJugadorArreglo[i - 1].setDomicilioJugador(fila.getCell(3).getStringCellValue());
                miJugadorArreglo[i - 1].setTelefonoJugador((long) fila.getCell(4).getNumericCellValue());
                miJugadorArreglo[i - 1].setEstaturaJugador(Double.parseDouble(fila.getCell(5).getStringCellValue()));
                miJugadorArreglo[i - 1].setPosicionJugador(fila.getCell(6).getStringCellValue());

            }

            int validacionJugador = 0;

            if (tablaJugadorEquipo.getRowCount() > 0) {

                Jugador miJugadorTablaValidacion[] = new Jugador[tablaJugadorEquipo.getRowCount()];

                for (int i = 0; i < miJugadorTablaValidacion.length; i++) {

                    long dni = Integer.parseInt(tablaJugadorEquipo.getValueAt(i, 3).toString());
                    String miJugadorTabla[] = new String[8];

                    for (int j = 0; j < miJugadorArreglo.length; j++) {

                        if (dni == miJugadorArreglo[j].getDniJugador()) {
                            validacionJugador = 1;
                        } else {
                            miJugadorTabla[0] = String.valueOf(0);
                            miJugadorTabla[1] = miJugadorArreglo[j].getNombreJugador();
                            miJugadorTabla[2] = miJugadorArreglo[j].getApellidoJugador();
                            miJugadorTabla[3] = String.valueOf(miJugadorArreglo[j].getDniJugador());
                            miJugadorTabla[4] = miJugadorArreglo[j].getDomicilioJugador();
                            miJugadorTabla[5] = String.valueOf(miJugadorArreglo[j].getTelefonoJugador());
                            miJugadorTabla[6] = String.valueOf(miJugadorArreglo[j].getEstaturaJugador());
                            miJugadorTabla[7] = miJugadorArreglo[j].getPosicionJugador();
                        }

                    }

                    if (validacionJugador == 0) {
                        DefaultTableModel.addRow(miJugadorTabla);
                        tablaJugadorEquipo.setModel(DefaultTableModel);
                        propiedadesTabla();
                    }

                }                

            } else {

                for (int x = 0; x < miJugadorArreglo.length; x++) {
                    String miJugadorTabla[] = new String[9];
                    miJugadorTabla[0] = String.valueOf(0);
                    miJugadorTabla[1] = miJugadorArreglo[x].getNombreJugador();
                    miJugadorTabla[2] = miJugadorArreglo[x].getApellidoJugador();
                    miJugadorTabla[3] = String.valueOf(miJugadorArreglo[x].getDniJugador());
                    miJugadorTabla[4] = miJugadorArreglo[x].getDomicilioJugador();
                    miJugadorTabla[5] = String.valueOf(miJugadorArreglo[x].getTelefonoJugador());
                    miJugadorTabla[6] = String.valueOf(miJugadorArreglo[x].getEstaturaJugador());
                    miJugadorTabla[7] = miJugadorArreglo[x].getPosicionJugador();
                    DefaultTableModel.addRow(miJugadorTabla);
                    tablaJugadorEquipo.setModel(DefaultTableModel);
                }                

            }

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "No se seleccionó el archivo correctamente");
        } catch (IOException ex) {
            Logger.getLogger(ModificarEquipo.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton2ActionPerformed1

    private void tablaJugadorEquipoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaJugadorEquipoMouseClicked

    }//GEN-LAST:event_tablaJugadorEquipoMouseClicked

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        Leer miLeer = new Leer();        
        Equipo miEquipo = miLeer.leerEquiposPorIdEquipo(idUsuario, idEquipo);        

        txt_nombre.setText(miEquipo.getNombreEquipo());
        txt_estadio.setText(miEquipo.getNombreEstadioEquipo());
        txt_direccion.setText(miEquipo.getDireccionEstadioEquipo());

        cargarTabla();

        propiedadesTabla();

    }//GEN-LAST:event_formWindowOpened

    private void itemEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemEliminarActionPerformed

        if (tablaJugadorEquipo.getSelectedRow() >= 0) {
            Modificar miModificar = new Modificar();
            miModificar.darBajaJugadorRelacionEquipo(idEquipo, Integer.parseInt(tablaJugadorEquipo.getValueAt(tablaJugadorEquipo.getSelectedRow(), 0).toString()));
            new alertas.AlertSuccess(this, true, "Se ha eliminado correctamente").setVisible(true);            
            cargarTabla();
            propiedadesTabla();
        } else if (tablaJugadorEquipo.getSelectedRow() < 0) {
            new alertas.AlertWarning(this, true, "Debes seleccionar una fila").setVisible(true);            
        }

    }//GEN-LAST:event_itemEliminarActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

        cargarTabla();
        propiedadesTabla();

    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarEquipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarEquipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarEquipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarEquipo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ModificarEquipo dialog = new ModificarEquipo(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemEliminar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane7;
    public static javax.swing.JTable tablaJugadorEquipo;
    private javax.swing.JTextField txt_direccion;
    private javax.swing.JTextField txt_estadio;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables
}
